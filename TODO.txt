### **ScrapLogGit2Net: Documentation and Enhancements**

#### **Overview**
The **ScrapLogGit2Net** project provides tools for analyzing and visualizing inter-individual networks of software developers who collaborate via Git. This document outlines the functionality of the key scripts and enhancements required to make the tool more robust, efficient, and user-friendly.

---

#### **Scripts and Functionalities**

1. **`transform-nofi-2-nofo-GraphML.py`**  
   Transforms GraphML files to normalize organizational affiliations and streamline visualization.

2. **`formatAndViz-nofi-GraphML.py`**  
   Formats and visualizes GraphML files, providing node coloring, sizing, and filtering options for better network insights.  

3. **`formatFilterAndViz-nofo-GraphML.py`**  
   Filters and visualizes normalized GraphML files, designed for large datasets.

---

#### **Goals and Improvements**

1. **De-Anonymization Reports**  
   - Identify de-anonymized nodes (developers) and affiliations.
   - Implement a logging mechanism to track results of de-anonymization processes.

2. **Node and Legend Simplification**  
   - Simplify legend handling with:
     - **Top 10 Firms**: Default display for top firms and others grouped under "Others."
     - **Color Assignment**: Use gray for unknown firms.
   - Ensure legends are visually consistent with square markers for "Others."

3. **Refinements for Testing and Visualization**  
   - Improve **Test Case 3** with more sophisticated node and edge handling.
   - Increase label sizes for better readability.
   - Implement side-by-side comparisons ("With Google" vs. "Without Google").

4. **Bug Fixes and Enhancements**  
   - Address inconsistencies in node isolation and missing affiliations (e.g., `"us"` affiliation).
   - Investigate discrepancies in node counts between `GraphML` and ScrapLog.
   - Refactor `network_measures` to improve performance and reliability.

5. **Documentation Enhancements**  
   - Create a **Documentation Folder** with detailed guides for all scripts:
     - **`transform-nofi-2-nofo-GraphML.py`**
     - **`formatAndViz-nofi-GraphML.py`**
     - **`formatFilterAndViz-nofo-GraphML.py`**
   - Include links to relevant resources in the `README.md`.

6. **Data Handling**  
   - Ensure robust handling of anonymized and non-anonymized email domains (`users.noreply.github.com`, `.cn`, `.fi`, `.pt`, etc.).
   - Add export functionality (`-e` for default GraphML export, `-ef` for export format options).

7. **Organizational Integration**  
   - Implement options for organization aggregation and individual aggregation.

---

#### **Proposed Modular Structure**

- **Scraper**:
  - Handles Git logs and scrapes data by type (organization, individual, weighted).
  
- **Miner**:
  - Processes GraphML files and outputs:
    - Graph structure.
    - Co-edited files grouped by developers.
    - Developer connections via co-edited files.
  
- **Reporter**:
  - Provides statistical reports on graphs, developers, and file collaboration.  
  - Includes extensions for:
    - Weighted organization-to-organization graphs.
    - Parallel developer-to-developer connections.

- **Exporter**:
  - Converts results into desired formats (e.g., GraphML, JSON).
  - Extends to support new formats.

---

#### **Enhancements to Test Cases**

- **Add Tests for Filtering**:
  - Create a standalone Bash script to dynamically generate and clean up filters.
  
- **Ensure Robustness**:
  - Add string similarity checks for names and affiliations.
  - Integrate affiliation triangulation (via GitHub API).

- **Refactor Legend Types**:
  - Document unsupported node coloring, sizing, and legend strategies.

---

#### **Usage Vision**

The goal is to create a tool that seamlessly integrates **quantitative**, **qualitative**, and **visual** data to provide clear insights into software collaboration networks. ScrapLogGit2Net should enable users to visualize "who works with whom" in complex projects quickly and intuitively, combining statistical rigor with elegant visual representations.

For any issues, contributions, or enhancements, refer to the [GitHub project](https://github.com).

